name: Deploy React app to GKE

on:
  workflow_run:
    workflows: ["Frontend unit tests"]
    branches: [master]
    types:
      - completed

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: multi-cluster
  GKE_ZONE: asia-southeast1-a
  SHA: ${ GITHUB_SHA:10 }

jobs:
  publish-to-hub:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Publish to dockerhub
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: Running deploy script
        run: |-
          docker build -t stephengrider/multi-client:latest -t stephengrider/multi-client:${{steps.vars.outputs.tag}} -f ./client/Dockerfile ./client
          docker build -t stephengrider/multi-server:latest -t stephengrider/multi-server:${{steps.vars.outputs.tag}} -f ./server/Dockerfile ./server
          docker build -t stephengrider/multi-worker:latest -t stephengrider/multi-worker:${{steps.vars.outputs.tag}} -f ./worker/Dockerfile ./worker
          docker push stephengrider/multi-client:latest
          docker push stephengrider/multi-server:latest
          docker push stephengrider/multi-worker:latest
          docker push stephengrider/multi-client:${{steps.vars.outputs.tag}}
          docker push stephengrider/multi-server:${{steps.vars.outputs.tag}}
          docker push stephengrider/multi-worker:${{steps.vars.outputs.tag}}

  setup-and-deploy:
    needs: publish-to-hub
    name: Setup and Deploy to k8s
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentails "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Deploy sample image to the GKE cluster
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: Deploy
        run: |-
          kubectl apply -f k8s/
          kubectl set image deployments/server-deployment server=stephengrider/multi-server:${{steps.vars.outputs.tag}}
          kubectl set image deployments/client-deployment client=stephengrider/multi-client:${{steps.vars.outputs.tag}}
          kubectl set image deployments/worker-deployment worker=stephengrider/multi-worker:${{steps.vars.outputs.tag}}
          kubectl get services -o wide